name: Scheduled Email Sender

on:
  schedule:
    - cron: '30 3 * * *'    # 9:00 AM IST
    - cron: '30 6 * * *'    # 12:00 PM IST
    - cron: '30 10 * * *'   # 4:00 PM IST
    - cron: '30 13 * * *'   # 7:00 PM IST
    - cron: '30 16 * * *'   # 10:00 PM IST
  workflow_dispatch:
    inputs:
      simulated_hour:
        description: 'Simulate IST hour (e.g., 09, 12, 16, 19, 22)'
        required: false
        default: ''

jobs:
  send_email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine target hour
        id: context
        run: |
          echo "üïì Detecting hour..."
          if [ "${{ github.event.inputs.simulated_hour }}" != "" ]; then
            HOUR="${{ github.event.inputs.simulated_hour }}"
            echo "‚úÖ Manual trigger with simulated hour: $HOUR"
          else
            HOUR=$(TZ="Asia/Kolkata" date +'%H')
            echo "üïí Scheduled trigger. Current IST hour: $HOUR"
          fi

          case "$HOUR" in
            "09") FILE="morning.html"; SUBJECT="Good Morning ‚òÄÔ∏è";;
            "12") FILE="noon.html"; SUBJECT="Good Noon ‚òÄÔ∏è";;
            "16") FILE="afternoon.html"; SUBJECT="Good Afternoon üå§Ô∏è";;
            "19") FILE="evening.html"; SUBJECT="Good Evening üåÜ";;
            "22") FILE="night.html"; SUBJECT="Good Night üåô";;
            *)
              echo "‚ùå Invalid hour: $HOUR. No email will be sent."
              exit 1
              ;;
          esac

          echo "üìÑ HTML file: emails/$FILE"
          echo "‚úâÔ∏è Subject: $SUBJECT"

          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "subject=$SUBJECT" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install --upgrade pip

      - name: Send Email
        env:
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
        run: |
          echo "üöÄ Starting email sender..."
          echo "üîê From: $EMAIL_SENDER"
          echo "üìß To: $EMAIL_RECIPIENTS"
          echo "üìÅ HTML File: emails/${{ steps.context.outputs.file }}"
          echo "üè∑Ô∏è Subject: ${{ steps.context.outputs.subject }}"
          python email_sender.py \
            "${{ steps.context.outputs.subject }}" \
            "emails/${{ steps.context.outputs.file }}"
